apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.redis.name }}
  labels:
    component: "{{ .Release.Name }}-{{ .Values.redis.name }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
spec:
  replicas: {{ .Values.redis.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.redis.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.redis.name }}
    spec:
      containers:
      - image: "{{ .Values.redis.image.name }}:{{ .Values.redis.image.tag}}"
        name: redis
        livenessProbe:
          exec: 
            command:
            - /bin/sh
            - -c
            - {{ .Values.redis.healthcheck.command }}
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          exec: 
            command:
            - /bin/sh
            - -c
            - {{ .Values.redis.healthcheck.command }}
          initialDelaySeconds: 10
          periodSeconds: 15
        ports:
        - container.port: {{ .Values.redis.container.port }}
          name: redis
        volumeMounts:
        - mountPath: /data
          name: redis-data
        - mountPath: /healthcheck/ 
          name: redis-cm 
      volumes:
        - name: redis-cm
          configMap:
            name: "{{ .Values.redis.name }}-cm"
            defaultMode: 0755
        - name: redis-data
  {{- if .Values.redis.volumes.enabled }}
          persistentVolumeClaim: 
            claimName: "{{ .Values.redis.name }}-pvc" 
  {{- else }}
          emptyDir: {} 
  {{- end }}
